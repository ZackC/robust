Sending build context to Docker daemon  28.21kB
Step 1/43 : ARG UBUNTU_VERSION
Step 2/43 : FROM alpine:3.7 as fork
 ---> 3fd9065eaf02
Step 3/43 : ARG REPO_FORK_URL
 ---> Running in e567ea9adbcc
Removing intermediate container e567ea9adbcc
 ---> c63d274bf837
Step 4/43 : RUN apk --no-cache add git
 ---> Running in b1d02cdce935
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
(1/6) Installing ca-certificates (20171114-r0)
(2/6) Installing libssh2 (1.8.0-r2)
(3/6) Installing libcurl (7.61.1-r0)
(4/6) Installing expat (2.2.5-r0)
(5/6) Installing pcre2 (10.30-r0)
(6/6) Installing git (2.15.2-r0)
Executing busybox-1.27.2-r7.trigger
Executing ca-certificates-20171114-r0.trigger
OK: 19 MiB in 17 packages
Removing intermediate container b1d02cdce935
 ---> 85a41232b5f8
Step 5/43 : RUN echo "[ROBUST] cloning repo: '${REPO_FORK_URL}'"  && git clone "${REPO_FORK_URL}" /tmp/repo-under-test  && echo "[ROBUST] cloned repo."
 ---> Running in f385dd8fbfb6
[ROBUST] cloning repo: 'https://github.com/robust-rosin/kobuki_desktop'
[91mCloning into '/tmp/repo-under-test'...
[0m[ROBUST] cloned repo.
Removing intermediate container f385dd8fbfb6
 ---> af6b4ee08f7e
Step 6/43 : FROM ubuntu:${UBUNTU_VERSION}
 ---> c9d990395902
Step 7/43 : ARG ROS_DISTRO
 ---> Using cache
 ---> fc86f42a4f90
Step 8/43 : ARG USE_APT_OLD_RELEASES
 ---> Using cache
 ---> 2eb8fc62717c
Step 9/43 : ARG CATKIN_PKG
 ---> Using cache
 ---> 44eb38efe570
Step 10/43 : ARG REPO_FIX_COMMIT
 ---> Using cache
 ---> 479bfc6c0e76
Step 11/43 : ARG REPO_BUG_COMMIT
 ---> Using cache
 ---> 9ed58f75abf3
Step 12/43 : ARG IS_BUILD_FAILURE
 ---> Using cache
 ---> c595e2f2756e
Step 13/43 : ENV ROS_DISTRO "${ROS_DISTRO}"
 ---> Using cache
 ---> bbd293949bf3
Step 14/43 : RUN echo "[ROBUST]: building image for ROS_DISTRO: '${ROS_DISTRO}'"
 ---> Using cache
 ---> 89b0089d8039
Step 15/43 : ENV ROS_WSPACE=/ros_ws
 ---> Using cache
 ---> 9a9d140bfac9
Step 16/43 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 550e88a19c17
Step 17/43 : ENV LANG C.UTF-8
 ---> Using cache
 ---> 831f8ff4aba8
Step 18/43 : ENV LC_ALL C.UTF-8
 ---> Using cache
 ---> 147c9166f4d7
Step 19/43 : RUN echo "#!/bin/bash \nset -e \nsource \"/opt/ros/\${ROS_DISTRO}/setup.bash\" \nsource \"${ROS_WSPACE}/devel/setup.bash\" \nexec \"\$@\"" > /entrypoint.sh  && chmod +x /entrypoint.sh
 ---> Using cache
 ---> f76e297eaebd
Step 20/43 : ENTRYPOINT ["/entrypoint.sh"]
 ---> Using cache
 ---> 302e0ba14aa4
Step 21/43 : CMD ["bash"]
 ---> Using cache
 ---> f780673f029b
Step 22/43 : RUN echo "[ROBUST] use archival sources? '${USE_APT_OLD_RELEASES}'"  && if [ "${USE_APT_OLD_RELEASES}" = "True" ]; then       echo "[ROBUST] using archival sources"       && sed -i -re 's/([a-z]{2}\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g'         /etc/apt/sources.list       && apt-get update       && apt-get dist-upgrade     ; else       echo "[ROBUST] not using archival sources"     ; fi
 ---> Using cache
 ---> fa5c18cc0794
Step 23/43 : RUN apt-get update  && apt-get install -y --no-install-recommends       build-essential       ca-certificates       git       python-pip       cmake       wget       lsb-release  && pip --version  && pip install --upgrade -i https://pypi.python.org/simple pip==9.0.3
 ---> Using cache
 ---> f8c825d4ce2e
Step 24/43 : RUN pip install --upgrade setuptools
 ---> Using cache
 ---> 40cbeef2dab2
Step 25/43 : RUN pip install --upgrade       wheel       rosdep       wstool       rosinstall       rospkg       catkin_pkg  && apt-get clean  && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> fef3c7c722d5
Step 26/43 : RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list  && wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
 ---> Using cache
 ---> 7c9bb6a70511
Step 27/43 : ARG USE_OSRF_REPOS
 ---> Using cache
 ---> 4f87a899c867
Step 28/43 : RUN if [ "${USE_OSRF_REPOS}" = "True" ]; then          echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros-latest.list        && wget http://packages.ros.org/ros.key -O - | apt-key add -     ; fi
 ---> Using cache
 ---> 41eca4e852a8
Step 29/43 : WORKDIR ${ROS_WSPACE}
 ---> Using cache
 ---> cd2612ad79b1
Step 30/43 : COPY deps.rosinstall .
 ---> Using cache
 ---> ae35d40b073c
Step 31/43 : RUN wstool init -j8 ${ROS_WSPACE}/src ${ROS_WSPACE}/deps.rosinstall
 ---> Using cache
 ---> f7005d2df27f
Step 32/43 : RUN apt-get clean  && apt-get update  && rosdep init  && rosdep update  && rosdep install --from-paths src -i --rosdistro=${ROS_DISTRO} -y       --skip-keys="python-rosdep python-catkin-pkg python-rospkg"  && apt-get clean  && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 231bb3b216e4
Step 33/43 : RUN cd /usr/src/gtest  && cmake CMakeLists.txt  && make
 ---> Using cache
 ---> 335c3c5365c5
Step 34/43 : RUN ${ROS_WSPACE}/src/catkin/bin/catkin_make_isolated       --install       --install-space /opt/ros/${ROS_DISTRO}       -DCMAKE_BUILD_TYPE=Release  && rm -rf        ${ROS_WSPACE}/src        ${ROS_WSPACE}/build_isolated        ${ROS_WSPACE}/devel_isolated
 ---> Using cache
 ---> e0627582cc0e
Step 35/43 : COPY --from=fork /tmp/repo-under-test src/repo-under-test
 ---> b7df059c2cf5
Step 36/43 : ENV REPO_FIX_COMMIT "${REPO_FIX_COMMIT}"
 ---> Running in df5dcddc93d6
Removing intermediate container df5dcddc93d6
 ---> 938207d4f4cf
Step 37/43 : ENV REPO_BUG_COMMIT "${REPO_BUG_COMMIT}"
 ---> Running in d462316f5259
Removing intermediate container d462316f5259
 ---> 604c02cec6b1
Step 38/43 : RUN cd src/repo-under-test  && echo "[ROBUST] fetching fixed and buggy source code..."  && echo "[ROBUST] using fix commit: ${REPO_FIX_COMMIT}"  && echo "[ROBUST] using bug commit: ${REPO_BUG_COMMIT}"  && git fetch origin "${REPO_FIX_COMMIT}"  && git fetch origin "${REPO_BUG_COMMIT}"  && git checkout "${REPO_BUG_COMMIT}"  && echo "[ROBUST] fetched fixed and buggy source code."
 ---> Running in 30a46bac6c49
[ROBUST] fetching fixed and buggy source code...
[ROBUST] using fix commit: 70948a266e2406c16a462bb6c6f6e203971c905e
[ROBUST] using bug commit: 3e1428b67ad1876ea5c57e59e787fca7813b8ebb
[91mFrom https://github.com/robust-rosin/kobuki_desktop
[0m[91m * branch            70948a266e2406c16a462bb6c6f6e203971c905e -> FETCH_HEAD
[0m[91mFrom https://github.com/robust-rosin/kobuki_desktop
[0m[91m * branch            3e1428b67ad1876ea5c57e59e787fca7813b8ebb -> FETCH_HEAD
[0m[91mNote: checking out '3e1428b67ad1876ea5c57e59e787fca7813b8ebb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 3e1428b... added test case
[0m[ROBUST] fetched fixed and buggy source code.
Removing intermediate container 30a46bac6c49
 ---> 47292451f55d
Step 39/43 : RUN echo "#!/bin/bash\npushd '${ROS_WSPACE}/src/repo-under-test' && \ngit clean -dfx && \ngit checkout \"\$1\" && \necho \"switched mode to: \$1\"" > switch  && echo "#!/bin/bash\n'${ROS_WSPACE}/switch' \"\${REPO_FIX_COMMIT}\"" > fix  && echo "#!/bin/bash\n'${ROS_WSPACE}/switch' \"\${REPO_BUG_COMMIT}\"" > unfix  && chmod +x fix unfix switch
 ---> Running in 5f5d982def93
Removing intermediate container 5f5d982def93
 ---> 2a569c32c138
Step 40/43 : RUN echo "[ROBUST] creating build script"  && echo "[ROBUST] PUT is provided by catkin package: '${CATKIN_PKG}'"  && echo "#!/bin/bash\n          source /opt/ros/$ROS_DISTRO/setup.bash           && catkin_make --only-pkg-with-deps=${CATKIN_PKG}" > build.sh  && chmod +x build.sh  && echo "[ROBUST] created build script"
 ---> Running in 66d4550b7471
[ROBUST] creating build script
[ROBUST] PUT is provided by catkin package: 'kobuki_dashboard'
[ROBUST] created build script
Removing intermediate container 66d4550b7471
 ---> 98ea1d34af28
Step 41/43 : RUN echo "[ROBUST] attempting to build PUT..."  && echo "[ROBUST] is a build failure expected? ${IS_BUILD_FAILURE}."  && ./build.sh || [ "${IS_BUILD_FAILURE}" = "yes" ]
 ---> Running in 367528298eb4
[ROBUST] attempting to build PUT...
[ROBUST] is a build failure expected? no.
-- The C compiler identification is GNU 5.4.0
-- The CXX compiler identification is GNU 5.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Using CATKIN_DEVEL_PREFIX: /ros_ws/devel
-- Using CMAKE_PREFIX_PATH: /opt/ros/kinetic
-- This workspace overlays: /opt/ros/kinetic
-- Found PythonInterp: /usr/bin/python (found version "2.7.12") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /ros_ws/build/test_results
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found gtest sources under '/usr/src/gtest': gtests will be built
-- Using Python nosetests: /usr/bin/nosetests-2.7
-- catkin 0.7.4
-- BUILD_SHARED_LIBS is on
-- Using CATKIN_WHITELIST_PACKAGES: kobuki_dashboard
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- ~~  traversing 1 packages in topological order:
-- ~~  - kobuki_dashboard
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- +++ processing catkin package: 'kobuki_dashboard'
-- ==> add_subdirectory(repo-under-test/kobuki_dashboard)
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- Configuring done
-- Generating done
-- Build files have been written to: /ros_ws/build
Base path: /ros_ws
Source space: /ros_ws/src
Build space: /ros_ws/build
Devel space: /ros_ws/devel
Install space: /ros_ws/install
Creating symlink "/ros_ws/src/CMakeLists.txt" pointing to "/opt/ros/kinetic/share/catkin/cmake/toplevel.cmake"
Whitelisted packages: kobuki_dashboard
####
#### Running command: "cmake /ros_ws/src -DCATKIN_DEVEL_PREFIX=/ros_ws/devel -DCMAKE_INSTALL_PREFIX=/ros_ws/install -DCATKIN_WHITELIST_PACKAGES=kobuki_dashboard -G Unix Makefiles" in "/ros_ws/build"
####
####
#### Running command: "make -j1 -l1" in "/ros_ws/build"
####
Removing intermediate container 367528298eb4
 ---> cf0af27b819e
Step 42/43 : COPY test.sh .
 ---> 4c1d99e05f6a
Step 43/43 : RUN cd src/repo-under-test  && git diff "${REPO_BUG_COMMIT}" "${REPO_FIX_COMMIT}" > "${ROS_WSPACE}/fix.patch"
 ---> Running in 489ac8112a7c
Removing intermediate container 489ac8112a7c
 ---> 92e08dd76b9e
Successfully built 92e08dd76b9e
Successfully tagged robustrosin/test-61a75df:latest
